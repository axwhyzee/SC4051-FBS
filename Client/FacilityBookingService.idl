// FacilityBookingService.idl
module FacilityModule {
    
    // Enum to represent days (you may need to define your own)
    enum DateEnum {
        MONDAY,
        TUESDAY,
        WEDNESDAY,
        THURSDAY,
        FRIDAY,
        SATURDAY,
        SUNDAY
    };
    
    // Enum for DayTime or you can define this as a struct with hour and minute
    struct DayTime {
        long hour;
        long minute;
    };

    // Struct to represent time (using hours and minutes as long integers)
    struct Time {
        long hour;   // Represents the hour
        long minute; // Represents the minute
    };

    // Struct to represent DayTime with DateEnum and Time struct
    struct DayTime {
        DateEnum day;   
        Time time;       
    };

    // Availability structure
    struct Availability {
        DateEnum day;
        Time startDate;
        Time endDate;
    };

    // Booking structure
    struct Booking {
        long bookingId; 
        string userName; 
        DayTime startDate; 
        DayTime endDate;   
    };
    
    // Facility structure
    struct Facility {
        string facilityName;           
        string facilityType;           
        sequence<Availability> availabilityList; 
        sequence<Booking> bookingList; 
    };

    // AvailabilityResponse structure
    struct AvailabilityResponse {
        long respCode; 
        map<DateEnum, Availability> availability; 
    };

    // FacilityBookingService Interface
    interface FacilityBookingService {

        // Method to get facility details
        sequence<Facility> getFacilityDetails();

        // Method to query availability by name and list of days
        map<DateEnum, Availability> queryFacility(in string facilityName, in sequence<DateEnum> days);

        // Method to book a facility
        long bookFacility(in string userName, in DayTime startDate, in DayTime endDate);

        // Method to change a booking
        long changeBooking(in long bookingId, in long offset);

        // Method to extend a booking
        long extendBooking(in long bookingId, in long minutes);
    };
};
